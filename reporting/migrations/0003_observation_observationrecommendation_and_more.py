# Generated by Django 4.2.15 on 2024-08-21 07:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import parler.fields
import parler.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("governanceplatform", "0020_alter_regulator_options_and_more"),
        ("reporting", "0002_riskdata_risk_a_riskdata_risk_c_riskdata_risk_i"),
    ]

    operations = [
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Observation",
                "verbose_name_plural": "Observations",
            },
        ),
        migrations.CreateModel(
            name="ObservationRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=255, verbose_name="Recommendation name"
                    ),
                ),
            ],
            options={
                "verbose_name": "Recommendation for observation",
                "verbose_name_plural": "Recommendations for observation",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.RemoveField(
            model_name="assetdata",
            name="impact_a",
        ),
        migrations.RemoveField(
            model_name="assetdata",
            name="impact_c",
        ),
        migrations.RemoveField(
            model_name="assetdata",
            name="impact_i",
        ),
        migrations.AddField(
            model_name="riskdata",
            name="impact_a",
            field=models.FloatField(default=-1, verbose_name="Availability impact"),
        ),
        migrations.AddField(
            model_name="riskdata",
            name="impact_c",
            field=models.FloatField(default=-1, verbose_name="Confidentility impact"),
        ),
        migrations.AddField(
            model_name="riskdata",
            name="impact_i",
            field=models.FloatField(default=-1, verbose_name="Integrity impact"),
        ),
        migrations.AddField(
            model_name="riskdata",
            name="recommendations",
            field=models.ManyToManyField(
                to="reporting.recommendationdata", verbose_name="recommendations"
            ),
        ),
        migrations.AddField(
            model_name="riskdata",
            name="uuid",
            field=models.UUIDField(
                default=uuid.uuid4, unique=True, verbose_name="uuid"
            ),
        ),
        migrations.CreateModel(
            name="ReportConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "threshold_for_high_risk",
                    models.FloatField(verbose_name="High risk rate threshold"),
                ),
                (
                    "number_of_year_considered",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of year considered"
                    ),
                ),
                (
                    "high_risk_number_for_top",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of high risks for top"
                    ),
                ),
                (
                    "threat_number_for_top",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of threats for top"
                    ),
                ),
                (
                    "vulnerability_number_for_top",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of vulnerabilities for top"
                    ),
                ),
                (
                    "asset_number_for_top",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of assets for top"
                    ),
                ),
                (
                    "asset_recommendation_for_top",
                    models.PositiveSmallIntegerField(
                        verbose_name="Number of recommendations for top"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="governanceplatform.company",
                        verbose_name="Company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration",
                "verbose_name_plural": "Configurations",
            },
        ),
        migrations.CreateModel(
            name="ObservationRecommendationSelection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "introduction_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Introduction date",
                    ),
                ),
                (
                    "Observation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reporting.observation",
                        verbose_name="Observation",
                    ),
                ),
                (
                    "ObservationRecommendation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reporting.observationrecommendation",
                        verbose_name="Recommendation for observation",
                    ),
                ),
                (
                    "introducer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Introducer",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="observation",
            name="observation_recommendations",
            field=models.ManyToManyField(
                through="reporting.ObservationRecommendationSelection",
                to="reporting.observationrecommendation",
                verbose_name="Observation recommendations",
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="risk_analysis",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="reporting.riskanalysisjson",
                verbose_name="Risk Analysis",
            ),
        ),
        migrations.CreateModel(
            name="ObservationRecommendationTranslation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default=None, null=True, verbose_name="description"
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="reporting.observationrecommendation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recommendation for observation Translation",
                "db_table": "reporting_observationrecommendation_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
