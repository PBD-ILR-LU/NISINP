# Generated by Django 5.0.3 on 2024-03-25 09:11

import django.db.models.deletion
import django.utils.timezone
import parler.fields
import parler.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("governanceplatform", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "creator_name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.regulator",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email template",
                "verbose_name_plural": "Email templates",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Impact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creator_name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.regulator",
                    ),
                ),
                (
                    "regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="governanceplatform.regulation",
                    ),
                ),
                (
                    "sectors",
                    models.ManyToManyField(
                        blank=True, default=None, to="governanceplatform.sector"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "incident_id",
                    models.CharField(max_length=22, verbose_name="Incident identifier"),
                ),
                (
                    "incident_notification_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "incident_detection_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("incident_starting_date", models.DateTimeField(blank=True, null=True)),
                (
                    "company_name",
                    models.CharField(max_length=100, verbose_name="Company name"),
                ),
                (
                    "contact_lastname",
                    models.CharField(max_length=100, verbose_name="contact lastname"),
                ),
                (
                    "contact_firstname",
                    models.CharField(max_length=100, verbose_name="contact firstname"),
                ),
                (
                    "contact_title",
                    models.CharField(max_length=100, verbose_name="contact title"),
                ),
                (
                    "contact_email",
                    models.CharField(max_length=100, verbose_name="contact email"),
                ),
                (
                    "contact_telephone",
                    models.CharField(max_length=100, verbose_name="contact telephone"),
                ),
                (
                    "technical_lastname",
                    models.CharField(max_length=100, verbose_name="technical lastname"),
                ),
                (
                    "technical_firstname",
                    models.CharField(
                        max_length=100, verbose_name="technical firstname"
                    ),
                ),
                (
                    "technical_title",
                    models.CharField(max_length=100, verbose_name="technical title"),
                ),
                (
                    "technical_email",
                    models.CharField(max_length=100, verbose_name="technical email"),
                ),
                (
                    "technical_telephone",
                    models.CharField(
                        max_length=100, verbose_name="technical telephone"
                    ),
                ),
                ("incident_reference", models.CharField(max_length=255)),
                ("complaint_reference", models.CharField(max_length=255)),
                (
                    "is_significative_impact",
                    models.BooleanField(
                        default=False, verbose_name="Significative impact"
                    ),
                ),
                (
                    "review_status",
                    models.CharField(
                        choices=[
                            ("UNDE", "Not delivered"),
                            ("DELIV", "Delivered but not yet reviewed"),
                            ("PASS", "Review passed"),
                            ("FAIL", "Review failed"),
                            ("OUT", "Not delivered and deadline exceeded"),
                        ],
                        default="UNDE",
                        max_length=5,
                    ),
                ),
                (
                    "incident_status",
                    models.CharField(
                        choices=[("CLOSE", "Closed"), ("GOING", "On-going")],
                        default="GOING",
                        max_length=5,
                    ),
                ),
                (
                    "affected_sectors",
                    models.ManyToManyField(to="governanceplatform.sector"),
                ),
                (
                    "affected_services",
                    models.ManyToManyField(to="governanceplatform.service"),
                ),
                (
                    "authorities",
                    models.ManyToManyField(
                        related_name="authorities", to="governanceplatform.regulator"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.company",
                    ),
                ),
                (
                    "contact_user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "impacts",
                    models.ManyToManyField(default=None, to="incidents.impact"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IncidentWorkflow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "review_status",
                    models.CharField(
                        choices=[
                            ("UNDE", "Not delivered"),
                            ("DELIV", "Delivered but not yet reviewed"),
                            ("PASS", "Review passed"),
                            ("FAIL", "Review failed"),
                            ("OUT", "Not delivered and deadline exceeded"),
                        ],
                        default="UNDE",
                        max_length=5,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "impacts",
                    models.ManyToManyField(default=None, to="incidents.impact"),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.incident",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("FREETEXT", "Freetext"),
                            ("MULTI", "Multiple Choice"),
                            ("SO", "Single Option Choice"),
                            ("MT", "Multiple Choice + Free Text"),
                            ("ST", "Single Choice + Free Text"),
                            ("CL", "Country list"),
                            ("RL", "Region list"),
                            ("DATE", "Date picker"),
                        ],
                        default="FREETEXT",
                        max_length=10,
                    ),
                ),
                (
                    "is_mandatory",
                    models.BooleanField(default=False, verbose_name="Mandatory"),
                ),
                ("position", models.IntegerField()),
                (
                    "creator_name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.regulator",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PredefinedAnswer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "creator_name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.regulator",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question - predefined answer",
                "verbose_name_plural": "Question - predefined answers",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "incident_workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.incidentworkflow",
                    ),
                ),
                (
                    "predefined_answers",
                    models.ManyToManyField(blank=True, to="incidents.predefinedanswer"),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuestionCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.IntegerField()),
                (
                    "creator_name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.regulator",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question Category",
                "verbose_name_plural": "Question Categories",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name="question",
            name="category",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="incidents.questioncategory",
            ),
        ),
        migrations.CreateModel(
            name="SectorRegulation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_detection_date_needed",
                    models.BooleanField(
                        default=False, verbose_name="Detection date needed"
                    ),
                ),
                (
                    "closing_email",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="closing_email",
                        to="incidents.email",
                    ),
                ),
                (
                    "opening_email",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="opening_email",
                        to="incidents.email",
                    ),
                ),
                (
                    "regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="governanceplatform.regulation",
                    ),
                ),
                (
                    "regulator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="governanceplatform.regulator",
                    ),
                ),
                (
                    "sectors",
                    models.ManyToManyField(
                        blank=True, default=None, to="governanceplatform.sector"
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident notification workflow",
                "verbose_name_plural": "Incident notification workflows",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name="incident",
            name="sector_regulation",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="incidents.sectorregulation",
            ),
        ),
        migrations.CreateModel(
            name="SectorRegulationWorkflow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.IntegerField(blank=True, default=0, null=True)),
                ("delay_in_hours_before_deadline", models.IntegerField(default=0)),
                (
                    "trigger_event_before_deadline",
                    models.CharField(
                        choices=[
                            ("NONE", "None"),
                            ("NOTIF_DATE", "Notification Date"),
                            ("DETECT_DATE", "Detection Date"),
                            ("PREV_WORK", "Previous Workflow"),
                        ],
                        default="NONE",
                        max_length=15,
                    ),
                ),
                (
                    "sector_regulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.sectorregulation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SectorRegulationWorkflowEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "trigger_event",
                    models.CharField(
                        choices=[
                            ("NOTIF_DATE", "Notification Date of the workflow"),
                            ("PREV_WORK", "Previous Workflow date"),
                        ],
                        default="NOTIF_DATE",
                        max_length=15,
                    ),
                ),
                ("delay_in_hours", models.IntegerField(default=0)),
                (
                    "email",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.email",
                    ),
                ),
                (
                    "sector_regulation_workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.sectorregulationworkflow",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email for Incident notification workflow",
                "verbose_name_plural": "Emails for Incident notification workflows",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name="sectorregulationworkflow",
            name="emails",
            field=models.ManyToManyField(
                through="incidents.SectorRegulationWorkflowEmail", to="incidents.email"
            ),
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_impact_needed",
                    models.BooleanField(
                        default=False, verbose_name="Impacts are needed"
                    ),
                ),
                (
                    "creator_name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.regulator",
                    ),
                ),
                ("questions", models.ManyToManyField(to="incidents.question")),
                (
                    "submission_email",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="submission_email",
                        to="incidents.email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident report",
                "verbose_name_plural": "Incident Reports",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name="sectorregulationworkflow",
            name="workflow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="incidents.workflow"
            ),
        ),
        migrations.AddField(
            model_name="sectorregulation",
            name="workflows",
            field=models.ManyToManyField(
                through="incidents.SectorRegulationWorkflow", to="incidents.workflow"
            ),
        ),
        migrations.AddField(
            model_name="incidentworkflow",
            name="workflow",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="incidents.workflow",
            ),
        ),
        migrations.AddField(
            model_name="incident",
            name="workflows",
            field=models.ManyToManyField(
                through="incidents.IncidentWorkflow", to="incidents.workflow"
            ),
        ),
        migrations.CreateModel(
            name="WorkflowTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.workflow",
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident report Translation",
                "db_table": "incidents_workflow_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="EmailTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                ("content", models.TextField()),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email template Translation",
                "db_table": "incidents_email_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ImpactTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("label", models.TextField()),
                (
                    "headline",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.impact",
                    ),
                ),
            ],
            options={
                "verbose_name": "impact Translation",
                "db_table": "incidents_impact_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PredefinedAnswerTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("predefined_answer", models.TextField()),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.predefinedanswer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question - predefined answer Translation",
                "db_table": "incidents_predefinedanswer_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuestionCategoryTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.questioncategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question Category Translation",
                "db_table": "incidents_questioncategory_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuestionTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("label", models.TextField()),
                ("tooltip", models.TextField(blank=True, null=True)),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "question Translation",
                "db_table": "incidents_question_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SectorRegulationTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.sectorregulation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident notification workflow Translation",
                "db_table": "incidents_sectorregulation_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SectorRegulationWorkflowEmailTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "headline",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.sectorregulationworkflowemail",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email for Incident notification workflow Translation",
                "db_table": "incidents_sectorregulationworkflowemail_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name="sectorregulationworkflow",
            constraint=models.UniqueConstraint(
                fields=("sector_regulation", "position"),
                name="Unique_SectorRegulationWorkflowPosition",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="workflowtranslation",
            unique_together={("language_code", "master")},
        ),
    ]
