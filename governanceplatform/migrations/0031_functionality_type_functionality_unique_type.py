# Generated by Django 5.1.2 on 2024-11-06 08:56

import django.db.models.constraints
from django.db import migrations, models


def clean_functionalities(apps, schema_editor):
    Functionality = apps.get_model("governanceplatform", "Functionality")
    Functionality.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("governanceplatform", "0030_scriptlogentry"),
    ]

    operations = [
        migrations.RunPython(clean_functionalities),
        migrations.AddField(
            model_name="functionality",
            name="type",
            field=models.CharField(
                choices=[("securityobjectives", "Security Objective")],
                max_length=100,
                verbose_name="Type",
            ),
        ),
        migrations.AddConstraint(
            model_name="functionality",
            constraint=models.UniqueConstraint(
                deferrable=django.db.models.constraints.Deferrable["DEFERRED"],
                fields=("type",),
                name="Unique_Type",
            ),
        ),
        migrations.AddField(
            model_name="observer",
            name="functionalities",
            field=models.ManyToManyField(
                to="governanceplatform.functionality", verbose_name="Functionalities"
            ),
        ),
        migrations.AddField(
            model_name="regulator",
            name="functionalities",
            field=models.ManyToManyField(
                to="governanceplatform.functionality", verbose_name="Functionalities", blank=True
            ),
        ),
    ]
