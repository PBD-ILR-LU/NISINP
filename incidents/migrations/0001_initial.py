# Generated by Django 4.2.1 on 2023-09-13 13:09

import datetime

import django.db.models.deletion
import parler.fields
import parler.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("governanceplatform", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_type",
                    models.CharField(
                        choices=[
                            ("PRELI", "Preliminary notification"),
                            ("FINAL", "Final notification"),
                            ("ADD", "Additional notification"),
                            ("REMIND", "Reminder : final notification not done"),
                        ],
                        default="PRELI",
                        max_length=10,
                    ),
                ),
                (
                    "days_before_send",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Impact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_generic_impact",
                    models.BooleanField(default=False, verbose_name="Generic Impact"),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PredefinedAnswer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allowed_additional_answer",
                    models.BooleanField(
                        default=False, verbose_name="Additional Answer"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuestionCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.IntegerField()),
            ],
            options={
                "verbose_name": "Question Category",
                "verbose_name_plural": "Question Categories",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="RegulationType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("FREETEXT", "Freetext"),
                            ("MULTI", "Multiple Choice"),
                            ("SO", "Single Option Choice"),
                            ("MT", "Multiple Choice + Free Text"),
                            ("ST", "Single Choice + Free Text"),
                            ("CL", "Country list"),
                            ("RL", "Region list"),
                            ("DATE", "Date picker"),
                        ],
                        default="FREETEXT",
                        max_length=10,
                    ),
                ),
                (
                    "is_mandatory",
                    models.BooleanField(default=False, verbose_name="Mandatory"),
                ),
                (
                    "is_preliminary",
                    models.BooleanField(default=False, verbose_name="Preliminary"),
                ),
                ("position", models.IntegerField()),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="incidents.questioncategory",
                    ),
                ),
                (
                    "predefined_answers",
                    models.ManyToManyField(blank=True, to="incidents.predefinedanswer"),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "incident_id",
                    models.CharField(max_length=22, verbose_name="Incident identifier"),
                ),
                (
                    "preliminary_notification_date",
                    models.DateField(default=datetime.date.today),
                ),
                (
                    "company_name",
                    models.CharField(max_length=100, verbose_name="Company name"),
                ),
                (
                    "contact_lastname",
                    models.CharField(max_length=100, verbose_name="contact lastname"),
                ),
                (
                    "contact_firstname",
                    models.CharField(max_length=100, verbose_name="contact firstname"),
                ),
                (
                    "contact_title",
                    models.CharField(max_length=100, verbose_name="contact title"),
                ),
                (
                    "contact_email",
                    models.CharField(max_length=100, verbose_name="contact email"),
                ),
                (
                    "contact_telephone",
                    models.CharField(max_length=100, verbose_name="contact telephone"),
                ),
                (
                    "technical_lastname",
                    models.CharField(max_length=100, verbose_name="technical lastname"),
                ),
                (
                    "technical_firstname",
                    models.CharField(
                        max_length=100, verbose_name="technical firstname"
                    ),
                ),
                (
                    "technical_title",
                    models.CharField(max_length=100, verbose_name="technical title"),
                ),
                (
                    "technical_email",
                    models.CharField(max_length=100, verbose_name="technical email"),
                ),
                (
                    "technical_telephone",
                    models.CharField(
                        max_length=100, verbose_name="technical telephone"
                    ),
                ),
                ("incident_reference", models.CharField(max_length=255)),
                ("complaint_reference", models.CharField(max_length=255)),
                ("final_notification_date", models.DateField(blank=True, null=True)),
                (
                    "is_significative_impact",
                    models.BooleanField(
                        default=False, verbose_name="Significative impact"
                    ),
                ),
                (
                    "affected_services",
                    models.ManyToManyField(to="governanceplatform.services"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="governanceplatform.company",
                    ),
                ),
                (
                    "contact_user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "impacts",
                    models.ManyToManyField(default=None, to="incidents.impact"),
                ),
                ("regulations", models.ManyToManyField(to="incidents.regulationtype")),
            ],
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.TextField(blank=True, null=True)),
                (
                    "PredefinedAnswer",
                    models.ManyToManyField(blank=True, to="incidents.predefinedanswer"),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.incident",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RegulationTypeTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.regulationtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "regulation type Translation",
                "db_table": "incidents_regulationtype_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuestionTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("label", models.TextField()),
                (
                    "tooltip",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "question Translation",
                "db_table": "incidents_question_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuestionCategoryTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.questioncategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question Category Translation",
                "db_table": "incidents_questioncategory_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="PredefinedAnswerTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("predefined_answer", models.TextField()),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.predefinedanswer",
                    ),
                ),
            ],
            options={
                "verbose_name": "predefined answer Translation",
                "db_table": "incidents_predefinedanswer_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ImpactTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("label", models.TextField()),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.impact",
                    ),
                ),
            ],
            options={
                "verbose_name": "impact Translation",
                "db_table": "incidents_impact_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="EmailTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                ("content", models.TextField()),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="incidents.email",
                    ),
                ),
            ],
            options={
                "verbose_name": "email Translation",
                "db_table": "incidents_email_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
